<?php

namespace app\controller\user;

use app\common\Code;
use app\controller\Base;
use app\service\UserService;
use think\exception\ValidateException;

class User extends Base
{

    public function initialize()
    {
        //$this->user = $this->request->UserInfo;
        // if (empty($this->user)) {
        // throw new \think\Exception(show(Code::TOKEN_ERROR, [], 10013), 201);
        //}
        //parent::initialize(); // TODO: Change the autogenerated stub
    }

    //获取下单地址
    public function GetUserAddress()
    {
        $list = UserService::getInstance()->getUserAddress($this->user['id']);
        return show(Code::SUCCESS, $list);
    }

    //修改用户地址
    public function GetUserAddressAdd()
    {
        $postField = 'addressId,phone,username,province,city,county,address';
        $post      = $this->request->only(explode(',', $postField), 'post', null);
        try {
            validate(\app\validate\User::class)
                ->scene('addressAdd')
                ->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
            return show(Code::ERROR, [], Code::WARNING, $e->getError());
        }
        $list = UserService::getInstance()->getUserAddressAdd($this->user['id'], $post);
        return show(Code::SUCCESS, $list);
    }
}