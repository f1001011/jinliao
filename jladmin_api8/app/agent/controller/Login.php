<?php


namespace app\agent\controller;


use app\BaseController;
use app\common\model\TokenModel;
use app\common\model\UserModel;
use app\validate\Login as validates;
use think\exception\ValidateException;

class Login extends BaseController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 登陆控制器
     */
    public function index()
    {
        $post = $this->request->post();

        //验证数据
        try {
            validate(validates::class)->scene('admin_login')->check($post);
        } catch (ValidateException $e) {
            // 验证失败 输出错误信息
            return $this->failed($e->getError());
        }

        $arr = $post['captcha'] == config('ToConfig.agent_captcha');
        if (!$arr) return $this->failed('验证码错误');


        //查询数据库 查看账号密码是否匹配
        $res = (new UserModel())->where('agent_id',0)->where(['user_name|phone' => $post['user_name']])->find();

        if (empty($res)) return $this->failed('账号不存在');
        if (md5($post['pwd']) != $res['pwd']) return $this->failed('密码不对');
        //占时屏蔽掉
        if ($res['agent_id'] >0) return $this->failed('没权限登录');
        $res = $res->toArray();
        //验证验证码是否正确    n
        //可登录后台的用户
//        $agent =[10000,10001,10002];
//
//        $save = in_array($res['id'],$agent);
//        if (!$save){
//            return $this->failed('没权限登录哦');
//        }
        //生成 token 并存入session,并存入数据库
        $token = api_token($res['id']);
        //查询是否存在这条token的用户
        $update = (new TokenModel)->where('admin_uid', $res['id'])->where('type', 2)->update(['token' => $token, 'create_time' => date('Y-m-d H:i:s')]);

        //数据不存在时插入
        if ($update == 0) {
            (new TokenModel)->insert(['type' => 2, 'token' => $token, 'admin_uid' => $res['id'], 'create_time' => date('Y-m-d H:i:s')]);
        }

        $res['token'] = $token;
        session('admin_agent_user', $res);
        (new \app\common\service\LoginLog())->login();//登陆日志
        //return $this->success(['token' => $token,'user'=>$res]);
        return $this->success(['token' => $token, 'user' => $res]);
    }

}